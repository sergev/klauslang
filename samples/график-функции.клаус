программа ГрафикФункции;
тип
    МассивДробных = массив дробных;
    
    ОписаниеФункции = структура
        формула: строка;
        шаблон: строка;
        коэф: целое;
        знаки: словарь логических ключ целое;
    окончание;
    МассивФункций = массив ОписаниеФункции;
    
    ОписаниеОси = структура
        мин, макс: дробное;
        шаг: дробное;
    окончание;

переменная
    инфо: МассивФункций;
    осьХ: ОписаниеОси;
    осьУ: ОписаниеОси;
    
функция знак(д: дробное): строка;
начало
    если д < 0 то вернуть "-" иначе вернуть "+";
окончание;

функция модуль(д: дробное): дробное;
начало
    если д < 0 то вернуть -д иначе вернуть д;
окончание;

процедура заполнитьИнфо();
начало
    длина(инфо, 4);
    // квадратная парабола
    инфо[0].формула := "y = a*x^2 + b*x + c";
    инфо[0].шаблон := "y = %с*x^2 %с %с*x %с %с";
    инфо[0].коэф := 3;
    инфо[0].знаки[0] := нет;
    инфо[0].знаки[1] := да;
    инфо[0].знаки[2] := да;
    // кубическая парабола
    инфо[1].формула := "y = a*x^3 + b*x^2 + c*x + d";
    инфо[1].шаблон := "y = %с*x^3 %с %с*x^2 %с %с*x %с %с";
    инфо[1].коэф := 4;
    инфо[1].знаки[0] := нет;
    инфо[1].знаки[1] := да;
    инфо[1].знаки[2] := да;
    инфо[1].знаки[3] := да;
    // гипербола
    инфо[2].формула := "y = a/x + b";
    инфо[2].шаблон := "y = %с/x %с %с";
    инфо[2].коэф := 2;
    инфо[2].знаки[0] := нет;
    инфо[2].знаки[1] := да;
    // синусоида
    инфо[3].формула := "y = a*sin(b*x) + c";
    инфо[3].шаблон := "y = %с*sin(%с*x) %с %с";
    инфо[3].коэф := 3;
    инфо[3].знаки[0] := нет;
    инфо[3].знаки[1] := нет;
    инфо[3].знаки[2] := да;
    // описания осей
    осьХ.мин := -10;
    осьХ.макс := 10;
    осьХ.шаг := 1;
    осьУ.мин := -10;
    осьУ.макс := 10;
    осьУ.шаг := 1;
окончание;

функция вычислить(фнк: целое; х: дробное; коэф: МассивДробных): дробное;
переменная
    м, у: дробное;
начало
    если модуль(х) < 0.00000001 то х := 0;
    выбор фнк из
        0: у := коэф[0]*х^2 + коэф[0]*х + коэф[2];
        1: у := коэф[0]*х^3 + коэф[1]*х^2 + коэф[2]*х + коэф[3];
        2: у := коэф[0] / х + коэф[1];
        3: у := коэф[0] * sin(коэф[1]*х) + коэф[2];
    иначе
        ошибка НеверноеЧисло сообщение "Неверный индекс функции " ++ строка(фнк) ++ ".";
    конец;
    если модуль(у) < 0.00000001 то у := 0;
    вернуть у;
окончание;

функция выбратьФункцию(): целое;
переменная
    к, фнк: целое;
начало
    вывести("  0 -- выход", НС);
    для к от 0 до длина(инфо)-1 цикл
        вывести("  ", к+1, " -- ", инфо[к].формула, НС);
    вывести("Выберите функцию: ");
    ввести(фнк);
    если фнк = 0 то завершить;
    если фнк < 1 || фнк > длина(инфо) то 
        ошибка НеверноеЧисло сообщение "Требуется число от 1 до " ++ строка(длина(инфо)) ++ ".";
    вернуть фнк-1;
окончание;

функция ввестиКоэффициенты(фнк: целое): МассивДробных;
переменная
    к: целое;
    с: символ;
    м: МассивДробных;
начало
    длина(м, инфо[фнк].коэф);
    с := 'A';
    для к от 0 до инфо[фнк].коэф-1 цикл начало
        вывести("Введите коэффициент " ++ с ++ ": ");
        ввести(м[к]);
        с := символ(целое(с)+1);
    конец;
    вернуть м;
окончание;

процедура ввестиОси();
начало
    вывести("Введите минимум, максимум и шаг разметки горизонтальной оси.", НС);
    вывести("Три числа через пробел (по умолчанию -10 10 1): ");
    ввести(осьХ.мин, осьХ.макс, осьХ.шаг);
    вывести("Введите минимум, максимум и шаг разметки вертикальной оси.", НС);
    вывести("Три числа через пробел (по умолчанию -10 10 1): ");
    ввести(осьУ.мин, осьУ.макс, осьУ.шаг);
окончание;

функция форматФормулы(фнк: целое; коэф: МассивДробных): строка;
переменная
    мс: массив строк;
    к, кво, идкс: целое;
начало
    кво := 0;
    для к от 0 до инфо[фнк].коэф-1 цикл
        если инфо[фнк].знаки[к] то кво += 2 иначе кво += 1;
    длина(мс, кво);
    идкс := 0;
    для к от 0 до инфо[фнк].коэф-1 цикл начало
        если инфо[фнк].знаки[к] то начало
            мс[идкс] := знак(коэф[к]);
            идкс += 1;
            мс[идкс] := строка(модуль(коэф[к]));
        конец иначе
            мс[идкс] := строка(коэф[к]);
        идкс += 1;
    конец;
    вернуть формат(инфо[фнк].шаблон, мс);
окончание;

переменная
    фнк: целое;
    коэф: МассивДробных;
    окно: объект;
    обл: структура
        г0, в0, гр, вр: целое;
    окончание;
    р: Размер;
    х, у: дробное;
    г, в, пг, пв: целое;
    нач: логическое;
    иф, рф, пф: строка;
    изо: объект;
начало
    вывести("Эта программа работает только в отладочной среде Клаус.", НС);
    вывести("Программа выводит график выбранной функции.", НС);
    заполнитьИнфо();
    фнк := выбратьФункцию();
    коэф := ввестиКоэффициенты(фнк);
    ввестиОси();
    окно := грОткрытьОкно("График функции");
    начало
        обл.г0 := 10;
        обл.в0 := 10;
        обл.гр := 1004;
        обл.вр := 748;
        грРазмер(окно, 1024, 768);
        грНачать(окно);
        начало
            грШрифт(окно, $FFFFFF);
            грКисть(окно, 0, грскПусто);
            р := грТекст(окно, 10, 10, "График функции " ++ форматФормулы(фнк, коэф));
            обл.в0 += р.в+5;
            обл.вр -= р.в*2+10;
            грПеро(окно, $7Ф7Ф7Ф, 1, грспЛиния);
            грШрифт(окно, $7Ф7Ф7Ф);
            // ось X
            грОтрезок(окно, обл.г0, обл.в0+обл.вр\2, обл.г0+обл.гр, обл.в0+обл.вр\2);
            грОтрезок(окно, обл.г0+обл.гр-10, обл.в0+обл.вр\2-3, обл.г0+обл.гр, обл.в0+обл.вр\2);
            грОтрезок(окно, обл.г0+обл.гр-10, обл.в0+обл.вр\2+3, обл.г0+обл.гр, обл.в0+обл.вр\2);
            р := грРазмерТекста(окно, "x");
            грТекст(окно, обл.г0+обл.гр-р.г, обл.в0+обл.вр\2+5, "x");
            х := осьХ.мин+осьХ.шаг;
            пока х <= осьХ.макс-осьХ.шаг цикл начало
                г := обл.г0 + обл.гр\2 + округл(х * обл.гр / (осьХ.макс-осьХ.мин));
                грОтрезок(окно, г, обл.в0+обл.вр\2-3, г, обл.в0+обл.вр\2+3);
                х += осьХ.шаг;
            конец;
            // ось Y
            грОтрезок(окно, обл.г0+обл.гр\2, обл.в0, обл.г0+обл.гр\2, обл.в0+обл.вр);
            грОтрезок(окно, обл.г0+обл.гр\2, обл.в0, обл.г0+обл.гр\2+3, обл.в0+10);
            грОтрезок(окно, обл.г0+обл.гр\2, обл.в0, обл.г0+обл.гр\2-3, обл.в0+10);
            р := грРазмерТекста(окно, "y");
            грТекст(окно, обл.г0+обл.гр\2-р.г-10, обл.в0, "y");
            у := осьУ.мин+осьУ.шаг;
            пока у <= осьУ.макс-осьУ.шаг цикл начало
                в := обл.в0 + обл.вр\2 - округл(у * обл.вр / (осьУ.макс-осьУ.мин));
                грОтрезок(окно, обл.г0+обл.гр\2-3, в, обл.г0+обл.гр\2+3, в);
                у += осьУ.шаг;
            конец;
        напоследок
            грЗакончить(окно);
        конец;
        // график
        грОбрезка(окно, обл.г0, обл.в0, обл.г0+обл.гр, обл.в0+обл.вр);
        грПеро(окно, $ФФФФФФ, 2, грспЛиния);
        нач := да;
        х := осьХ.мин;
        пока х < осьХ.макс цикл начало
            у := вычислить(фнк, х, коэф);
            если конечно(у) то начало
                если у < осьУ.мин*10 то у := осьУ.мин*10
                иначе если у > осьУ.макс*10 то у := осьУ.макс*10;
                г := обл.г0 + обл.гр\2 + округл(х * обл.гр / (осьХ.макс-осьХ.мин));
                в := обл.в0 + обл.вр\2 - округл(у * обл.вр / (осьУ.макс-осьУ.мин));
                если !нач то грОтрезок(окно, пг, пв, г, в);
                пг := г;
                пв := в;
                нач := нет;
            конец иначе
                нач := да;
            х += (осьХ.макс-осьХ.мин)/1000;
        конец;
        грОбрезка(окно, нет);
        // завершение
        грШрифт(окно, $FFFFFF);
        грТекст(окно, 10, обл.в0+обл.вр+5, "Перейдите на закладку ""Консоль"" для завершения...");
        вывести(НС, "Введите имя файла для сохранения графика (Enter -- выход без сохранения):", НС);
        ввести(иф);
        если иф = "" то завершить;
        рф := файлРасширение(иф);
        если загл(рф) <> ".BMP" то иф := иф ++ ".bmp";
        пф := файлПуть(иф);
        если пф = "" то иф := файлДомКат() ++ иф;
        изо := грИзоСоздать(окно, 0, 0, 1024, обл.в0 + обл.вр);
        начало
            грИзоСохранить(изо, иф);
            вывести("Сохранено в " ++ иф);
        напоследок
            грУничтожить(изо);
        конец;
    напоследок
        грУничтожить(окно);
    конец;
окончание.
